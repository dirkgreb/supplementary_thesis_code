{"frames":[{"func":"tree %>% ggtree(layout = \"daylight\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"ggtree(., layout = \"daylight\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"ggplot(tr, mapping = mapping, layout = layout, mrsd = mrsd, as.Date = as.Date, \n    yscale = yscale, yscale_mapping = yscale_mapping, ladderize = ladderize, \n    right = right, branch.length = branch.length, root.position = root.position, \n    ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"ggplot.default(tr, mapping = mapping, layout = layout, mrsd = mrsd, \n    as.Date = as.Date, yscale = yscale, yscale_mapping = yscale_mapping, \n    ladderize = ladderize, right = right, branch.length = branch.length, \n    root.position = root.position, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fortify(data, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fortify.phylo(data, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"layout.unrooted(model, layout.method = layout, branch.length = branch.length, \n    ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"layoutDaylight(model, branch.length, MAX_COUNT)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"applyLayoutDaylight(tree_df, currentNode_id)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"getSubtreeUnrooted.df(df, node_id)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tibble::tibble(node = children_ids, subtree = purrr::map(.data$node, \n    ~getSubtree.df(df, .x)))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tibble_quos(xs, .rows, .name_repair)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"splice_dfs(output)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vec_c(!!!x, .name_spec = \"{inner}\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function () \n.name_spec(outer = outer, inner = inner))()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".name_spec(outer = outer, inner = inner)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"glue::glue(`_spec`)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"glue_data(.x = NULL, ..., .sep = .sep, .envir = .envir, .open = .open, \n    .close = .close, .na = .na, .null = .null, .comment = .comment, \n    .literal = .literal, .transformer = .transformer, .trim = .trim)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"do.call(paste0, recycle_columns(res))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"recycle_columns(res)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vapply(x, NROW, integer(1))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"no loop for break/next, jumping to top level"}